PUSH 10 ; y
PUSH 5  ; x
ADD text_a[HL]
CALL .print_letter

PUSH 10
PUSH 8
SUB text_b[0]
CALL .print_letter

PUSH 10
PUSH 11
ADD text_c[0]
CALL .print_letter

PUSH 10
PUSH 14
ADD text_d[0]
CALL .print_letter

PUSH 16
PUSH 5
ADD text_o[0]
CALL .print_letter

PUSH 16
PUSH 8
ADD text_x[0]
CALL .print_letter

PUSH 16
PUSH 11
ADD text_e[0]
CALL .print_letter

PUSH 16
PUSH 14
ADD text_y[0]
CALL .print_letter

ET

LOAD 0

HALT

; print 6x5 letter, memory location in HL, x, y on stack
print_letter:
    ENTER 0

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    DEC {BP + 3}
    DEC {BP + 3}
    INC {BP + 4}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    DEC {BP + 3}
    DEC {BP + 3}
    INC {BP + 4}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    DEC {BP + 3}
    DEC {BP + 3}
    INC {BP + 4}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    DEC {BP + 3}
    DEC {BP + 3}
    INC {BP + 4}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    INC {BP + 3}

    LOAD (HL) ; first sprite byte
    PUSH H
    PUSH L
    PUSH ACC
    LOAD {BP + 4} ; y
    STORE L
    LOAD 0
    STORE H
    MULW 128
    LOAD {BP + 3} ; x
    ADDW ACC
    ADDW 0x9fff ; video addr now in HL
    POP ACC
    STORE (HL)
    POP L
    POP H
    INC HL
    
    LEAVE
    RET 2 ; pop 2 stack arguments from the stack as cleanup

text_a:
    0x03 0x33 0x00
    0x30 0x00 0x30
    0x33 0x33 0x30
    0x30 0x00 0x30
    0x30 0x00 0x30
    
text_b:
    0x33 0x33 0x00
    0x30 0x00 0x30
    0x33 0x33 0x00
    0x30 0x00 0x30
    0x33 0x33 0x00
    
text_c:
    0x03 0x33 0x30
    0x30 0x00 0x00
    0x30 0x00 0x00
    0x30 0x00 0x00
    0x03 0x33 0x30
    
text_d:
    0x33 0x33 0x00
    0x30 0x00 0x30
    0x30 0x00 0x30
    0x30 0x00 0x30
    0x33 0x33 0x00
    
text_e:
    0x33 0x33 0x30
    0x30 0x00 0x00
    0x33 0x33 0x00
    0x30 0x00 0x00
    0x33 0x33 0x30

text_o:
    0x03 0x33 0x00
    0x30 0x00 0x30
    0x30 0x00 0x30
    0x30 0x00 0x30
    0x03 0x33 0x00

text_x:
    0x30 0x00 0x30
    0x03 0x03 0x00
    0x00 0x30 0x00
    0x03 0x03 0x00
    0x30 0x00 0x30

text_y:
    0x30 0x00 0x30
    0x03 0x03 0x00
    0x00 0x30 0x00
    0x00 0x30 0x00
    0x00 0x30 0x00